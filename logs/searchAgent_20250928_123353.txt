[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

2. 五年以上相关工作经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选要求在杭州



---

[Conversation History]


[第1步]
[思考过程]
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 初始检索采用“工作年限+技能框架+城市”组合，以确保获取到符合条件的人选。
- 杭州为硬性条件，必须纳入筛选。
- 先用“PyTorch/TensorFlow”单独搜索，再与分布式训练能力进行AND组合。
- 控制能力关键词的数量，确保搜索匹配力。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 7
        当前页码: 1
        每页数量: 10
        本页候选人数量: 6
        
        重复出现的人选数量: 0
        重复出现的人选占比: 0.0
        合格人选数量：6
        合格人选命中率：1.0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索结果较为精准，找到的候选人完全符合条件，合格人选命中率为100%。然而，有部分候选人因缺乏具体技术栈的说明或地点不匹配而未能通过筛选。

## 新线索发现（仅针对合格人选）
- 高频出现的目标公司：无明确信息
- 高频出现的职位头衔：无明确信息
- 高频出现的技能关键词：PyTorch、TensorFlow、分布式训练
- 可以作为下一轮定向搜索的新方向：增加技术栈中OCR、视觉AI、目标检测等关键词，探索Keras、MXNet等相关技术

## 检索策略反馈
- 关键词是否过宽或过窄：关键词设置较为精准，能够有效识别符合条件的候选人，但在特定技术栈上稍显不足。
- 哪些条件起到有效筛选作用：工作年限、城市以及核心技术关键词（PyTorch、TensorFlow、分布式训练）
- 哪些条件可能需要调整或放宽：城市条件可能限制了部分合适候选人，技术栈关键词可进一步细化。

## 下一步建议
- 建议保留的条件：
  - 核心技术关键词（PyTorch、TensorFlow、分布式训练）
  - 工作年限要求
  - 当前所在城市为杭州的约束

- 建议放宽的条件：
  - 探讨放宽城市约束，或自行考虑八大核心技术相同，城市不同的候选人

- 建议新增的线索：
  - 增加OCR、视觉AI、目标检测等相关技术关键词。
  - 考虑在搜索中加入Keras、MXNet等技术库的关键词。



---



[第2步]
[思考过程]
<think_summary>
- 基于上一轮的反馈，关键词设置较为精准，但在特定技术栈上稍显不足，导致候选人数量有限。
- 为增加人选数量，继续保留PyTorch、TensorFlow和分布式训练，同时增加OCR、视觉AI、目标检测等相关技术关键词。
- 增加Keras、MXNet等库的关键词，提升匹配候选人的技术广度。
- 当前城市为硬约束，继续保留。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练; OCR; 视觉AI; 目标检测; Keras; MXNet
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练; OCR; 视觉AI; 目标检测; Keras; MXNet", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0
        当前页码: 1
        每页数量: 10
        本页候选人数量: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本次检索没有返回任何结果，这可能是由于关键词设置过多或者过于具体，导致搜索条件过于严苛。

## 新线索发现（仅针对合格人选）
- 由于没有人选结果，因此没有新的线索可以记录。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄，因为未能返回任何结果。
- 哪些条件起到有效筛选作用：暂时无法判断哪些条件起到了筛选作用，因为缺乏结果。
- 哪些条件可能需要调整或放宽：需要放宽关键词，减少复杂度，或者逐步调整关键词以探寻正确的关键点。

## 下一步建议
- 建议保留的条件：可以保留行业或核心技能的基本条件，但需要减少非核心关键词的使用。
- 建议放宽的条件：减少关键词数量，聚焦核心职位或技能要求，避免过于具体或多余的关键词。
- 建议新增的线索：重新审视搜索目标，选择最核心的岗位名称或技能进行测试，以逐步锁定能够返回结果的关键词。


---



[第3步]
[思考过程]
<think_summary>
- 上一轮由于关键词过窄导致无搜索结果，此次将策略调整为仅聚焦核心技术框架。
- 去掉多余的非核心关键词，仅保留PyTorch、TensorFlow和分布式训练。
- 确保搜索条件不过于严苛，逐步测试以找到符合条件的人选。
- 继续以杭州为硬性地点约束，以保证地理位置的精准匹配。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]
关键词在keyword_record中出现过，认为是重复策略，不进行后续分析

---



[第4步]
[思考过程]
<think_summary>
- 上一轮使用了成功策略同样的关键词组合，未改变关键词导致搜索重复，此次需基于新的检索策略。
- 由于需求是找到20个符合条件的人选，因此本轮尝试通过放宽能力关键词进行搜索，以确保足够的候选人数量。
- 除保持PyTorch、TensorFlow框架和分布式训练外，新增深度学习和机器学习基础关键词，以覆盖更多符合条件的候选人。
- 继续保持杭州为硬性约束条件，以符合地理要求。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练; 深度学习; 机器学习
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练; 深度学习; 机器学习", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 3
        当前页码: 1
        每页数量: 10
        本页候选人数量: 2
        
        重复出现的人选数量: 2
        重复出现的人选占比: 1.0
        合格人选数量：0
        合格人选命中率：0.0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索没有获得合格人选，结果重复率为100%。这表明当前的关键词设置并未有效挖掘到新的合适人才，同时未能筛选出满足要求的候选人。

## 新线索发现（仅针对合格人选）
- 无

## 检索策略反馈
- 关键词是否过宽或过窄：当前关键词可能设置过窄，导致没有挖掘到足够的候选人。
- 哪些条件起到有效筛选作用：没有看到有效筛选作用的条件。
- 哪些条件可能需要调整或放宽：整体的关键词策略需要重新审视，更集中于核心技能或者特性以扩展结果集的覆盖面。

## 下一步建议
- 建议保留的条件：如果有任何涉及到核心技能的关键词，应保持它们的有用性。
- 建议放宽的条件：减少冗余和特定的附加条件，尤其是过于细化的职位名称或技能组合。
- 建议新增的线索：考虑增加其他相关的核心技能关键词，或者使用更广泛的行业术语，以扩大候选人搜索的潜在范围。也可重新评估现有的岗位或技能设置，以确保它们真实地反映出目标需求。


---



[第5步]
[思考过程]
<think_summary>
- 经过多轮搜索调整，目前策略效果不佳，导致合格人选数量不足，同时出现重复现象。
- 本次调整将聚焦在核心技能的多样性上，放宽关键词约束，以提高结果多样性和匹配度。
- 考虑保留核心技术框架关键词，并加入更广泛的行业术语，如“人工智能”，“信息技术”，用于扩大候选人的搜索范围。
- 保留杭州的硬性地理限制，以确保结果的地理准确性。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 人工智能; 信息技术
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 人工智能; 信息技术", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 13
        当前页码: 1
        每页数量: 10
        本页候选人数量: 10
        
        重复出现的人选数量: 2
        重复出现的人选占比: 0.2
        合格人选数量：8
        合格人选命中率：0.8
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本次搜索返回了13名人选，其中10人显示在本页，8名被认为是合格的候选人。候选人中满足所有硬性条件的比率较高，显示当前搜索策略的准确性较好。但也有部分不符合条件的结果，主要由于城市要求的不匹配问题。

## 新线索发现（仅针对合格人选）
- **高频出现的目标公司**：阿里巴巴、网易等杭州本地科技企业。
- **高频出现的职位头衔**：不存在明确的头衔模式，但技术方面与PyTorch、TensorFlow相关。
- **高频出现的技能关键词**：PyTorch、TensorFlow、分布式训练。
- **可以作为下一轮定向搜索的新方向**：增加如Keras和MXNet等框架关键词，并关注相关技术项目的具体经验描述。

## 检索策略反馈
- **关键词是否过宽或过窄**：关键词设置较为合理，尤其是在技术框架的选择上。但过于限制城市可能导致部分合适候选人被排除。
- **哪些条件起到有效筛选作用**：PyTorch、TensorFlow 和城市（杭州）有效识别了合适人选。
- **哪些条件可能需要调整或放宽**：城市条件可以稍微放宽，或考虑候选人对杭州的潜在兴趣。

## 下一步建议
- **建议保留的条件**：PyTorch、TensorFlow、分布式训练经验。
- **建议放宽的条件**：考虑放宽对目前居住城市的绝对限制，将期望工作地点也纳入考量。
- **建议新增的线索**：加入其他深度学习框架如Keras、MXNet以及具体项目经验关键词（如“PyTorch项目”、“分布式训练项目”）。进一步使用期望工作地点权重加强对目标城市候选人的定位。


---



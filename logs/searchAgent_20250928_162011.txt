[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Reference]
曾经有效的策略可供参考：None

---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

AI方向技术负责人
1. 本科以上学历
2. 五年以上相关工作经验
5. 精通Transformer、CNN等架构
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选现在在杭州，或者希望来杭州工作，满足任意一项即可


当前任务完成进度为（1即100%）：0.1

---

[Conversation History]


[第1步]
[思考过程]
```
<think_summary>
- 初始搜索策略以“核心技能”和“城市”为基础，控制结果规模。
- 因为没有历史反馈，关键词选择以“硬约束”先行，逐步引入“软约束”。
- 抽象词如“AI技术负责人”先不使用，重点放在实际技能与经验。
- 使用技能组合如“Transformer/CNN”和“PyTorch/TensorFlow”以保证匹配度。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch; TensorFlow; 分布式训练
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
```
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "workExperienceRange": 5, "keyword": "Transformer; CNN; PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 3，其中对第一页候选人进行合格检查，数量为: 3
        
                重复出现的人选数量: 0
                重复出现的人选占比: 0.0
                合格人选数量：2
                合格人选命中率（1即为100%）：0.6666666666666666
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 这次检索共有3名候选人，其中2名符合要求，人选合格率为66.67%。关键词选择比较精准，能够有效识别符合条件的候选人，但也有部分城市期望不符的情况。

## 新线索发现（仅针对合格人选）
- 高频出现的目标公司：在合格人选中尚未出现具体目标公司的高频率信息。
- 高频出现的职位头衔：未在结果中详细列出职位头衔。
- 高频出现的技能关键词：Transformer、CNN、PyTorch、TensorFlow
- 可以作为下一轮定向搜索的新方向：
  - 增加GPT、Mixtral、Llama、DeepSpeed、Megatron-lm等相关技术关键词。
  - 聚焦在南京和杭州之间有业务的科技公司，以及具备AI影响力的公司如AMD、燧原科技。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词范围适中，有效筛选出符合条件的人选。
- 哪些条件起到有效筛选作用：核心技术关键词（Transformer、CNN、PyTorch、TensorFlow、分布式训练）以及地点（杭州）。
- 哪些条件可能需要调整或放宽：需在城市要求上稍加灵活性或考虑更广泛的企业地点范围。

## 下一步建议
- 建议保留的条件：
  - 保留核心技术关键词（如Transformer、CNN、PyTorch、TensorFlow）。
  - 保留分布式训练的技能要求。
- 建议放宽的条件：
  - 考虑放宽或灵活设置工作地点的要求，例如考虑更多科技城市的候选人。
- 建议新增的线索：
  - 新增技术关键词（如GPT、Mixtral、Llama、DeepSpeed、Megatron-lm）。
  - 围绕南京与杭州之间有业务的企业、AMD、燧原科技等AI领域的影响力公司进行定向搜索。


---



[第2步]
[思考过程]
-----------------
<think_summary>
- 从搜索反馈中可知，前两轮检索定位较精确，关键在于核心技术关键词和城市限制。
- 本轮计划在保留原有技能关键词的基础上，增加新技术关键词（如GPT、Mixtral、Llama），去探索和拓宽搜索面。
- 在城市要求上灵活设置，保持杭州为硬约束，但接受有来杭州意愿的候选人。
- 通过在不同科技城市中拓展搜索和锁定AI影响力公司（如AMD、燧原科技），提升匹配度。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：AMD; 燧原科技
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch; TensorFlow; GPT; Mixtral; Llama; 分布式训练
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
----------------
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "company": "AMD", "keyword": "Transformer; CNN; PyTorch; TensorFlow; GPT; Mixtral; Llama; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0，其中对第一页候选人进行合格检查，数量为: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索没有返回任何结果，这可能是因为使用的关键词过多或过于具体，从而导致检索结果为空。

## 新线索发现（仅针对合格人选）
- 无

## 检索策略反馈
- 关键词是否过宽或过窄：关键词过窄，导致未能检索到结果。
- 哪些条件起到有效筛选作用：由于没有任何结果，目前无法判定哪些条件起到了有效作用。
- 哪些条件可能需要调整或放宽：可能需要减少关键词数量，简化关键词组合，尤其需要减少复合或特定领域的关键词，从而扩大搜索范围。

## 下一步建议
- 建议保留的条件：若有较为核心且基础的条件可直接保留，如特定行业或领域的关键词。
- 建议放宽的条件：放宽对于具体技术、职位名称或公司级别的限制。
- 建议新增的线索：尝试使用更广泛的搜索关键词，例如从行业相关的广义概念入手，以索引更多可能的人选。逐步缩小范围以精确定位适合的人才。


---



[第3步]
[思考过程]
<think_summary>
- 前两轮检索定位较精确，但关键词过于复杂导致上轮无结果，需要调整策略。
- 在本轮检索中将缩减技能关键词数量，集中于最核心的几项，同时保持地点要求上灵活性。
- 将目标公司以附属信息角色出现，减少对搜索结果的限制。
- 在技能关键词中优先选择行业普遍使用的架构和框架，以提升匹配度。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch; TensorFlow
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "workExperienceRange": 5, "keyword": "Transformer; CNN; PyTorch; TensorFlow", "location": ["杭州"], "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 5，其中对第一页候选人进行合格检查，数量为: 5
        
                重复出现的人选数量: 3
                重复出现的人选占比: 0.6
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮搜索的总人选数量为5，尽管合格检查覆盖了所有候选人，但结果显示无合格人选。重复出现比例为60%，表明关键词调整未能带来新的人才。

## 新线索发现（仅针对合格人选）
- 无合格人选，因此无具体新线索。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄，尽管缩减了数量，但未能有效识别具备特定技术架构和框架的经验。
- 哪些条件起到有效筛选作用：当前策略未显示出有效的筛选作用。
- 哪些条件可能需要调整或放宽：与具体项目经验和技术框架相关的关键词需要调整和更具体化。

## 下一步建议
- 建议保留的条件：
  - 继续关注AI技术相关的关键词，但需要精准化。
- 建议放宽的条件：
  - 尝试纳入更宽泛的技术框架关键词，确保考虑不同方向的经验。
- 建议新增的线索：
  - 增加对Transformer、CNN、PyTorch、TensorFlow的具体项目经验或相关描述，但要保证词语的准确性和代表性，避免过于复杂的描述。


---



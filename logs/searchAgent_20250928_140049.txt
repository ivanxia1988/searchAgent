[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

2. 五年以上相关工作经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选要求在杭州


当前任务完成进度为（1即100%）：0.35

---

[Conversation History]


[第2步]
[思考过程]
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 初始检索采用“城市+关键框架+分布式训练”的组合，以确保能够找到熟悉特定技术框架的候选人。
- 城市是硬约束，因此首先锁定在杭州，以确保地域匹配。
- 因为目标岗位与公司详情未提供，可以不局限于特定职位名称，先从技能要求进行筛选。
- 目前专注于框架与分布式经验，并根据检索结果调整关键词的严苛程度。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 7
        当前页码: 1
        每页数量: 10
        本页候选人数量: 6
        
        重复出现的人选数量: 0
        重复出现的人选占比: 0.0
        合格人选数量：6
        合格人选命中率：1.0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮搜索结果展示出良好的命中率，共找到合格人选6人，命中率达到100%。不过，存在一些候选人未满足所有硬性条件，特别是在特定技术经验方面缺乏明确描述。

## 新线索发现（仅针对合格人选）
- **高频出现的目标公司**：阿里巴巴、网易（建议针对这些公司在下一轮进行重点搜索）
- **高频出现的职位头衔**：无明确给出，但通过搜索策略可以进一步细化头衔定义。
- **高频出现的技能关键词**：PyTorch、TensorFlow、分布式训练
- **可以作为下一轮定向搜索的新方向**：引入Keras、MXNet等相关技术关键词，同时增加对公司和城市的特定关键词。

## 检索策略反馈
- **关键词是否过宽或过窄**：当前关键词组合比较有效，但在技术框架方面可以更加精细化。
- **哪些条件起到有效筛选作用**：PyTorch、TensorFlow、分布式训练以及城市（杭州）。
- **哪些条件可能需要调整或放宽**：可以考虑放宽对城市的限制，以包括期望城市为杭州而非当前城市的情况。

## 下一步建议
- **建议保留的条件**：PyTorch、TensorFlow、分布式训练、杭州
- **建议放宽的条件**：对当前城市的严格限制，可以考虑包括期望城市为杭州的人选。
- **建议新增的线索**：增加Keras、MXNet等技术关键词，并考虑将阿里巴巴、网易作为目标公司关键词。这样可能会捕捉到更多符合条件的候选人。


---



[第3步]
[思考过程]
<think_summary>
- 本轮搜索显示关键词命中较好，但总数量不足且部分候选人未满足所有条件。
- 下一轮搜索将在保留现有关键词的基础上，增加Keras、MXNet等相关技术关键词，以测试效果。
- 引入阿里巴巴和网易作为目标公司关键词，并放宽对当前城市的限制，以包括期望城市为杭州的人选。
- 针对未明确职位头衔的情况，将进一步细化头衔定义，以提升下一步搜索的深度。
- 保留硬约束城市：杭州，继续优化策略以提高合格人选数量。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：阿里巴巴; 网易
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练; Keras; MXNet
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"company": "阿里巴巴", "workExperienceRange": 5, "location": ["杭州"], "keyword": "PyTorch; TensorFlow; 分布式训练; Keras; MXNet", "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0
        当前页码: 1
        每页数量: 10
        本页候选人数量: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本次检索未获得任何结果，很可能是因为关键词设置过多或过于复杂，导致检索条件过于狭窄。

## 新线索发现（仅针对合格人选）
- 由于没有检索到任何结果，暂时没有新的线索可供分析。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词设置可能过窄，导致没有结果。
- 哪些条件起到有效筛选作用：当前条件均未发挥筛选作用。
- 哪些条件可能需要调整或放宽：需要大幅减少或简化关键词，尤其是职位和技能相关的复杂关键词。

## 下一步建议
- 建议保留的条件：
  - 如果岗位或行业本身比较特殊，关键的行业名词可以保留。
- 建议放宽的条件：
  - 减少岗位职责或技能的关键词数量，以试探出较宽的匹配范围。
- 建议新增的线索：
  - 再次尝试时，考虑从核心技能或最关键的职位要求入手，类似于从“AI”而非“AI方向负责人”开始检索。


---



[第4步]
[思考过程]
<think_summary>
- 上一轮搜索未获得结果,可能是因为关键词设置过于复杂，需要简化。
- 本次检索将简化为最核心的框架技能，移除Keras、MXNet，引入变更后的方向。
- 去除目标公司限制，以增加候选池的广度。
- 保留硬约束条件“杭州”作为候选人的期望城市，专注于核心框架关键词。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 108
        当前页码: 1
        每页数量: 10
        本页候选人数量: 10
        
        重复出现的人选数量: 1
        重复出现的人选占比: 0.1
        合格人选数量：9
        合格人选命中率：0.9
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本次检索结果较为成功，合格人选命中率为0.9，说明关键词设置较为精准，有效地识别出符合条件的候选人。需要注意的是，仍有部分简历未能匹配核心技能关键词，这可能需要进一步优化关键词策略。

## 新线索发现（仅针对合格人选）
- **高频出现的目标公司：** 未明确提到，但建议中提及可考虑的公司有阿里巴巴、网易、vivo等。
- **高频出现的职位头衔：** 高级开发工程师、算法工程师（未明确，但与技能需求匹配）
- **高频出现的技能关键词：** PyTorch、TensorFlow、分布式训练
- **可以作为下一轮定向搜索的新方向：** 添加Keras、MXNet、模型压缩、量化等相关技术关键词；进一步明确项目经验中涉及的具体技术和应用场景。

## 检索策略反馈
- **关键词是否过宽或过窄：** 关键词较为适中，大多数核心技能被有效识别，但是部分细节有待增强。
- **哪些条件起到有效筛选作用：** PyTorch、TensorFlow、分布式训练、杭州作为硬性条件起到了有效的筛选作用。
- **哪些条件可能需要调整或放宽：** 杭州城市限制可能在后续检索中根据需要适当放宽；考虑期望城市的权重调整以扩展搜索范围。

## 下一步建议
- **建议保留的条件：** 保留核心技能关键词（如PyTorch、TensorFlow、分布式训练）和城市限制（根据招聘需求）。
- **建议放宽的条件：** 如城市期望可在某些情况下放宽，或增加对灵活搬迁候选人的考量。
- **建议新增的线索：** 添加关于具体技术栈和项目经验的关键词描述，如Keras、MXNet、模型压缩、量化、自然语言处理等；可能的匹配公司如阿里巴巴、网易、vivo等。这将有助于识别具有更丰富技能背景的候选人。


---



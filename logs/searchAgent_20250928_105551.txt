[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

2. 五年以上相关工作经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选要求在杭州



---

[Conversation History]


[第1步]
[思考过程]
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 由于城市限制为硬约束，确保人选在杭州。
- 将核心能力 PyTorch/TensorFlow 及分布式训练放至能力关键词，并考虑尝试控制在三到四个高频技术词语。
- 初始轮从技能核心词开始，逐步叠加目标岗位进行测验。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

    搜索结果状态: 成功
    消息: CTS候选人搜索成功
    搜索到的人选总数: 7
    当前页码: 1
    每页数量: 10
    本页候选人数量: 6
    
对观察结果的分析摘要: ## 本轮检索整体评价
- 结果数量适中，但精确匹配的候选人偏少，仅有两位候选人符合条件。

## 命中率与质量
- 值得进一步查看的人选比例：低
- 是否存在明显的噪音候选人？噪音集中在哪些维度：
  - 技能：未明确提及使用PyTorch或TensorFlow框架及分布式训练经验。
  - 城市：部分候选人当前所在地不在目标城市（杭州）。

## 新线索发现（仅针对合格人选）
- 高频出现的目标公司：无明显频率
- 高频出现的职位头衔：无过多信息
- 高频出现的技能关键词：无过多信息
- 可以作为下一轮定向搜索的新方向：OCR、目标检测、视觉AI等相关词汇

## 检索策略反馈
- 关键词是否过宽或过窄：关键词过窄，导致部分有潜力的候选人未被识别。
- 哪些条件起到有效筛选作用：城市限制筛选有效，但可能过于严格。
- 哪些条件可能需要调整或放宽：
  - 考虑放宽城市限制，或将期望城市纳入优先考虑范围。
  - 扩展技能关键词集以提高召回率。

## 下一步建议
- 建议保留的条件：
  - 保留基础技能要求，例如PyTorch或TensorFlow。
  
- 建议放宽的条件：
  - 当前所在城市限制，以包含期望城市为杭州的候选人。

- 建议新增的线索：
  - 加入OCR、目标检测、视觉AI等相关词汇，以提高召回率。
  - 包含深度学习模型、AI平台等常用术语作为关键词。


---



[第2步]
[思考过程]
<think_summary>
- 基于上轮反馈，关键词设置较窄，需扩大技能词汇以提高召回率。
- 建议保留PyTorch/TensorFlow等核心框架，同时加入OCR、目标检测、视觉AI等相关词汇。
- 考虑城市限制对结果数量的影响，将“期望城市”加入以检测广泛技能拥有者。 
- 本轮依然不使用特定岗位及目标公司限定，最大化结果池的多样化。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练; OCR; 目标检测; 视觉AI
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练; OCR; 目标检测; 视觉AI", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

    搜索结果状态: 成功
    消息: CTS候选人搜索成功
    搜索到的人选总数: 1
    当前页码: 1
    每页数量: 10
    本页候选人数量: 1
    
对观察结果的分析摘要: ## 本轮检索整体评价
- 搜索结果数量极少，仅命中1名候选人，但具体人选信息为空，意味着可能存在筛选条件过于严格或设置的关键词组合过于复杂。

## 命中率与质量
- 值得进一步查看的人选比例：低（因为没有具体的人选信息）。
- 是否存在明显的噪音候选人？由于结果为空，无法判断。

## 新线索发现（仅针对合格人选）
- 高频出现的目标公司：无
- 高频出现的职位头衔：无
- 高频出现的技能关键词：无
- 可以作为下一轮定向搜索的新方向：无

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄，导致无法找到合适的候选人。
- 哪些条件起到有效筛选作用：由于结果为空，无法判断。
- 哪些条件可能需要调整或放宽：建议放宽岗位关键词的数量或复杂度。

## 下一步建议
- 建议保留的条件：确保核心要求不降低，引导精准筛选。
- 建议放宽的条件：考虑减少关键词数量或简化关键词组合，以提升候选人命中率。
- 建议新增的线索：不要新增复杂关键词，先尝试重新定义现有条件。


---



[第3步]
[思考过程]
<think_summary>
- 基于上轮反馈，关键词组合可能过于复杂，需简化以提升召回率。
- 保留核心框架能力，减少额外的技能关键词，聚焦于关键技术条件。
- 再次评估城市限制，并确保条件设置足够宽松以最大化潜在匹配。
- 本轮将仅使用核心技术关键词和期望城市限定，去掉额外的复杂条件。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

    搜索结果状态: 成功
    消息: CTS候选人搜索成功
    搜索到的人选总数: 7
    当前页码: 1
    每页数量: 10
    本页候选人数量: 6
    
对观察结果的分析摘要: ## 本轮检索整体评价
- 结果数量适中，但页面中表示无候选人信息，可能是由于关键词过于严格或技术问题导致的信息缺失。

## 命中率与质量
- 值得进一步查看的人选比例：低（页面没有显示具体候选人信息）。
- 是否存在明显的噪音候选人？无法判断（没有具体信息）。

## 新线索发现（仅针对合格人选）
- 高频出现的目标公司：无（没有具体信息）。
- 高频出现的职位头衔：无（没有具体信息）。
- 高频出现的技能关键词：无（没有具体信息）。
- 可以作为下一轮定向搜索的新方向：无（没有具体信息）。

## 检索策略反馈
- 关键词是否过宽或过窄：可能过窄，导致没有具体候选人信息呈现。
- 哪些条件起到有效筛选作用：无（没有具体信息）。
- 哪些条件可能需要调整或放宽：根据结果为空，可能需要检查关键词的选择和数量。

## 下一步建议
- 建议保留的条件：暂时无法判断，建议从零开始重新设计。
- 建议放宽的条件：如果可能，减少关键词的数量，查看是否由于关键词过多导致无结果。
- 建议新增的线索：尝试使用更广泛的关键词查看是否能返回候选人信息，例如减少定位类别的细化，查看返回结果的变化。


---



[第4步]
[思考过程]
<think_summary>
- 关键词组合过于复杂，导致搜索结果过于严格，需要简化以提升召回率。
- 核心框架能力PyTorch和TensorFlow需要保持以确保核心要求不变。
- 考虑对期望城市进行重新设置为重要但非强制条件，以扩大候选池。
- 本轮将测试简化后的技能关键词组合，确保核心技术词依然帮助筛选。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

    搜索结果状态: 成功
    消息: CTS候选人搜索成功
    搜索到的人选总数: 108
    当前页码: 1
    每页数量: 10
    本页候选人数量: 10
    
对观察结果的分析摘要: ## 本轮检索整体评价
- 结果数量适中，共搜索到108位候选人，但精准命中率偏低，许多候选人不满足核心技能要求或地点要求。

## 命中率与质量
- 值得进一步查看的人选比例：低
- 存在明显的噪音候选人，包括城市不符（如期望在杭州，但候选人在贵阳、西安等地），以及技能不符（缺乏具体框架经验）。

## 新线索发现（仅针对合格人选）
- 由于多数候选人不合格，未能提取到有效的新线索。

## 检索策略反馈
- 关键词设置过于狭窄，尤其是在技能要求（如PyTorch/TensorFlow）上没有考虑到其他相关技能可能的变体或关联。
- 地理位置条件限制过强，导致合适人选流失。
- 当前的技术关键词未有效筛选出合格人选，需要调整或补充其他相关技术关键词。

## 下一步建议
- 建议保留的条件：
  - 核心技术关键词（如PyTorch/TensorFlow），但需要扩展。
- 建议放宽的条件：
  - 地理位置要求，可考虑作为非强制条件。
- 建议新增的线索：
  - 添加更多深度学习相关框架（如Keras、MXNet）和技术词汇。
  - 包括自然语言处理、算法工程师等相关职位技能词。


---



[第5步]
[思考过程]
<think_summary>
- 基于上轮反馈，本次检索关键词组合需更加灵活，以兼顾框架、算法和地理因素。
- 核心框架PyTorch和TensorFlow应继续保留，同时加入相关技术词汇如Keras、MXNet，以及自然语言处理、算法工程等关键词，以扩大潜在候选人池。
- 地理位置条件需放宽，将城市设为期望城市以避免优质候选人流失。
- 本轮关键词将适度增加，与期望城市结合，在滤出合格人选的同时提升召回率。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; Keras; MXNet; 自然语言处理; 算法工程
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow; Keras; MXNet; 自然语言处理; 算法工程", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

    搜索结果状态: 成功
    消息: CTS候选人搜索成功
    搜索到的人选总数: 2
    当前页码: 1
    每页数量: 10
    本页候选人数量: 2
    
对观察结果的分析摘要: ## 本轮检索整体评价
- 结果数量较少，仅有2个候选人，且没有合格匹配的选项。关键词的选择可能过于狭窄或不够明确。

## 命中率与质量
- 值得进一步查看的人选比例：低
- 是否存在明显的噪音候选人？：
  - 因为搜索中有特定技术框架（PyTorch/TensorFlow）但没有明确经验描述，均被判定为不合格。

## 新线索发现（仅针对合格人选）
- 无合格人选，因此无新线索发现。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄，导致候选人中缺乏合格选择。
- 哪些条件起到有效筛选作用：框架技术要求（PyTorch/TensorFlow）起到了筛选作用，但严格程度可能需要调整。
- 哪些条件可能需要调整或放宽：尝试放宽对框架的描述要求，或考虑其他相关技术和平台。

## 下一步建议
- 建议保留的条件：继续关注对特定技术（如PyTorch/TensorFlow）的经验要求。
- 建议放宽的条件：在经验描述的明确性上可以稍微放宽，或考虑接受相关领域的能力表现。
- 建议新增的线索：针对自然语言处理、平台建设、以及GPU部署经验进行更广泛的搜索。尝试更广领域的关键词，可能包括“自然语言处理平台”、“分布式系统开发”等。


---



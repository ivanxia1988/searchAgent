
角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
4. 目标公司：[填写]
3. 目标岗位：[填写]
4. 能力关键词：[填写]
7. 目前城市：[填写]
8. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -工具支持的关键词是AND方式，要注意不要设置过多的关键词导致目标空间过小


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>

招聘要求: 
1. 计算机相关专业本科及以上学历
2. 五年以上相关工作经验
3. 主导过至少2个完整AI项目落地
4. 熟练掌握Python、C++、Java等至少一种编程语言
5. 精通Transformer、CNN等架构
6. 有LVM多模态大模型实战经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
8. 具备B端AI产品项目经验
9. 人选要求在杭州

```
<think_summary>
- 初始搜索策略采用岗位、学历、工作经验和核心技能的组合，通过地理位置的约束确保目标城市的匹配。
- 初步筛选能力关键词集中在“大模型”“Transformer/CNN”“PyTorch/TensorFlow”等，识别匹配度较高的候选人。
- 由于首次搜索进行收敛策略：优先保证核心技能的匹配，再根据搜索结果考虑进一步加入或替换能力关键词。
- 硬约束包括学历、城市和经验年限，作为首轮搜索保留这些刚性指标。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：无
4. 能力关键词：多模态; Transformer; CNN; PyTorch; TensorFlow
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>
```
搜索到的人选数量：共2位人选
```
<think_summary>
- 根据首次搜索的结果，匹配人选数量相对较少，考虑适当放宽或调整能力关键词以扩大搜索范围。
- 保留学历和城市作为硬性约束不变，仍以此作为确保候选人基本条件匹配的关键。
- 针对编程语言和大模型经验的关键词进行调整，尝试聚焦于不同的编程语言或者增加一个宽泛的模型经验。
- 采纳收敛策略，主要调整能力关键词，先保证关键技能的匹配，再迭代尝试不同组合。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：无
4. 能力关键词：Python; C++; Java; LVM; 大模型
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>
```
搜索到的人选数量：共24位人选
```
<think_summary>
- 进行反馈调整后的人选匹配数量显著增加，表明放宽和调整能力关键词对结果有积极影响。
- 由于目标匹配已经接近需求范围，暂停改变硬性条件如学历和城市，保持一致性以确保质量。
- 收集到的数据提示当前能力关键词组合较有效，因此下阶段优化应保持已验证有效的关键词。
- 考虑引入其他核心技能或测试更加具体的行业经验关键词，进一步提高匹配质量而非数量。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：无
4. 能力关键词：B端AI产品; 主导AI项目; 分布式训练
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>
```
搜索到的人选数量：共100位人选
```
<think_summary>
- 关键词调整后的人选数量进一步增多，显示适当的关键词调整有利于扩大候选人池。
- 当前关键词组合已经达到较高的匹配度，暂停进一步调整硬性条件如学历和城市，以免降低匹配精度。
- 确保新引入的技能关键词与岗位要求的核心技能一致，以提高搜索结果的专业符合度。
- 结合当前搜索反馈，拟在最终阶段稳中求精，调整重点从数量扩展转移至质量提升。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：无
4. 能力关键词：AI项目落地; Transformer; 分布式训练; PyTorch; TensorFlow
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>
```
搜索到的人选数量：共22位人选
```
<think_summary>
- 经由数次关键词调整，适当增加和替换能力关键词后，人选总数稳定，且质量趋于符合岗位要求。
- 现有组合在保证关键技能匹配的同时，亦保证了结果的专业性和覆盖面，需保持核心要素不变。
- 确认当前搜索结果的高质量后，继续利用已验证的有效关键词，须防大量调整带来质量波动。
- 在已获得的待选人名单基础上，更加重点分析候选人具体匹配度，而非过多扩展搜索维度。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：无
4. 能力关键词：Transformer; AI项目落地; PyTorch; TensorFlow
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>
```
搜索到的人选数量：共4位人选
[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

2. 五年以上相关工作经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选要求在杭州


当前任务完成进度为（1即100%）：0.2

---

[Conversation History]


[第1步]
[思考过程]
```
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 初始时，使用工作经验和城市作为硬约束，提升搜索的有效性。
- 选择PyTorch/TensorFlow框架作为能力关键词，以提高匹配度。
- 分布式训练经验虽重要，但与框架关键词先进行组合，轻量化检索。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：五年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
```
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; TensorFlow", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 100，其中对第一页候选人进行合格检查，数量为: 10
        
                重复出现的人选数量: 0
                重复出现的人选占比: 0.0
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮搜索结果的命中率较低，没有找到任何合格的候选人。主要的原因是硬性约束条件（如城市要求）未被满足，以及技术能力关键词未在简历中明确体现。

## 新线索发现（仅针对合格人选）
由于没有合格的人选，因此没有新的目标公司、职位头衔或技能关键词被识别。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词设置相对合理，但硬性条件上的设置（如城市要求过于严格）导致合格人选减少。
- 哪些条件起到有效筛选作用：位置要求（杭州市）作为硬性约束排除了很多候选人。
- 哪些条件可能需要调整或放宽：
  - 城市条件或许可以增强对期望工作城市的权重，而不仅仅关注当前所在地。
  - 技术能力相关关键词（如PyTorch/TensorFlow）虽然重要，但需要针对性地增加关于实际项目经验的描述。

## 下一步建议
- 建议保留的条件：
  - 技术关键词（如PyTorch、TensorFlow），可能需要更具体的应用描述。
  - 工作年限要求可以继续保留，以确保候选人的经验水平。
- 建议放宽的条件：
  - 城市要求：考虑提高对期望城市的权重而不仅是当前所在地的硬性要求。
- 建议新增的线索：
  - 增加其他相关技术关键词如Keras、MXNet。
  - 结合具体项目经验词汇，如“分布式训练项目经历”。
  - 可以考虑搜索一些目标公司，特别是杭州本地的大型科技公司如阿里巴巴、网易。


---



[第2步]
[思考过程]
<think_summary>
- 由上次搜索反馈可知，城市要求较为严格，建议将目标扩展至期望工作城市而非现居城市。
- 技术能力关键词需要更具体的应用与项目经验描述，本次增加“分布式训练项目经历”等具体项目经验。
- 新增相关技术关键词Keras、MXNet，以便扩大搜索结果范围。
- 继续保留并重点关注工作年限和核心技术能力关键词，以保障候选人的经验水平。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：五年以上
4. 性别要求：不限
5. 目标公司：阿里巴巴; 网易
6. 目标岗位：无
7. 能力关键词：PyTorch; TensorFlow; 分布式训练项目经历; Keras; MXNet
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"company": "阿里巴巴", "keyword": "PyTorch; TensorFlow; 分布式训练项目经历; Keras; MXNet", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0，其中对第一页候选人进行合格检查，数量为: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索未能获取到任何结果，说明关键词可能过于精准或复杂，导致检索无效。

## 新线索发现（仅针对合格人选）
- 因无合格人选，暂无新线索发现。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄或复杂，导致无结果。
- 哪些条件起到有效筛选作用：当前没有任何条件有效，因为没有结果。
- 哪些条件可能需要调整或放宽：关键词组合需要进行重大调整，建议减少关键词的复杂性或数量。

## 下一步建议
- 建议保留的条件：暂时不建议保留条件，因为无结果需要重新评估整体策略。
- 建议放宽的条件：关键词数量和复杂性，选择更核心的关键词尝试重新进行检索。
- 建议新增的线索：识别目标岗位的核心技能或特征，减少到一个或两个最为关键的条件进行重新检索。


---



[第3步]
[思考过程]
<think_summary>
- 本轮搜查未能获取任何结果，说明现有关键词组合过于复杂，影响了搜索效果。
- 技术关键词复杂化导致检索无效，需要简化关键词策略。
- 将关键词限制在最核心的技术能力上，如“PyTorch”或“分布式训练”。
- 去掉目标公司，聚焦于技能和经验，保证搜索的包容性。
</think_summary>
<keywords>
1. 学历下限：不限
2. 年龄要求：不限
3. 工作年限：五年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：PyTorch; 分布式训练
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "PyTorch; 分布式训练", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 12，其中对第一页候选人进行合格检查，数量为: 10
        
                重复出现的人选数量: 2
                重复出现的人选占比: 0.2
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索命中率低，合格人选为0，主要问题在于城市匹配和技术能力匹配不准确。

## 新线索发现（仅针对合格人选）
- **高频出现的目标公司：** 无合格人选，未能发现相关有价值信息。
- **高频出现的职位头衔：** 无合格人选，未能发现相关有价值信息。
- **高频出现的技能关键词：** PyTorch、分布式训练
- **可以作为下一轮定向搜索的新方向：** 尝试调整城市和技能关键词的匹配条件。

## 检索策略反馈
- **关键词是否过宽或过窄：** 过窄。城市和技术细节限制太多或不明确导致命中率低。
- **哪些条件起到有效筛选作用：** PyTorch、分布式训练、杭州
- **哪些条件可能需要调整或放宽：** 期望城市和具体技术框架关键词的准确性。

## 下一步建议
- **建议保留的条件：** 城市限制为杭州（但也需考虑期望城市与现居地的差别）
- **建议放宽的条件：** 增加类似技术框架（如Keras、TensorFlow）的关键词。
- **建议新增的线索：** 注意期望城市的限制，增加对目标公司的搜索范围，如特定的杭州科技公司。考虑更具包容性的城市条件，以及进一步明确使用的技术词汇，以拓展候选人范围。


---



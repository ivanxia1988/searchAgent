[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

AI方向技术负责人
1. 本科以上学历
2. 五年以上相关工作经验
3. 主导过至少2个完整AI项目落地
4. 熟练掌握Python、C++、Java等至少一种编程语言
5. 精通Transformer、CNN等架构
6. 有LVM多模态大模型实战经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选要求在杭州


当前任务完成进度为（1即100%）：0.0

---

[Conversation History]


[第2步]
[思考过程]
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 初始检索采用“学历+工作经验+城市+核心技能”组合，确保基础条件筛选。
- 选择核心技能如“多模态”“Transformer/CNN”作为软约束，以避免抽象词减小结果集。
- 编程语言和框架关键词联合测试，确保能筛选出具备特定技能的人选。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：AI技术负责人
7. 能力关键词：Transformer; CNN; 多模态; PyTorch; TensorFlow
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "workExperienceRange": 5, "position": "AI技术负责人", "keyword": "Transformer; CNN; 多模态; PyTorch; TensorFlow", "location": ["杭州"], "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0，其中对第一页候选人进行合格检查，数量为: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索未能获得任何搜索结果，这可能是由于关键词设置过多或过于具体导致无法匹配相关人选。

## 新线索发现（仅针对合格人选）
- 无合格人选，无新线索发现。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄，限制过多而导致无结果。
- 哪些条件起到有效筛选作用：由于没有返回结果，无法判断哪些条件有效。
- 哪些条件可能需要调整或放宽：应考虑减少关键词的数量或简化要求，以利于获得搜索结果。

## 下一步建议
- 建议保留的条件：保留与岗位直接相关的核心关键词。
- 建议放宽的条件：减少关键词数量，去掉过于细化的要求以扩大搜索范围。
- 建议新增的线索：尝试广义上的核心能力或经验关键词，避免过于狭隘的特定工具或方法。可以考虑从行业或职位头衔的角度去拓展关键词，例如使用行业通用术语。


---



[第3步]
[思考过程]
<think_summary>
- 基于历史搜索反馈显示无结果，当前策略需调整。
- 策略调整为减少能力关键词，聚焦最核心要求，扩大搜索范围。
- 初步锁定技术架构“Transformer”及“多模态”作为能力核心关键词。
- 消除过于具体框架关键词如PyTorch/TensorFlow，以避免限制过多。
- 目标城市仍保留为硬约束，以确保地域要求符合。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：AI技术负责人
7. 能力关键词：Transformer; 多模态
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "position": "AI技术负责人", "keyword": "Transformer; 多模态", "location": ["杭州"], "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 0，其中对第一页候选人进行合格检查，数量为: 0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索没有返回任何结果，这意味着所设置的搜索条件可能过于严格。

## 新线索发现（仅针对合格人选）
- 由于没有返回结果，因此没有新的线索发现。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词可能过窄。
- 哪些条件起到有效筛选作用：由于没有结果，无法判断哪一项条件起有效作用。
- 哪些条件可能需要调整或放宽：需要对关键词进行大幅度精简和调整，保留核心关键词尝试测试。

## 下一步建议
- 建议保留的条件：核心的行业关键词。
- 建议放宽的条件：删除过于细节或长的关键词，特别是在“目标岗位”的条件，尽量简化。
- 建议新增的线索：尝试引入广义的行业术语，或者分片尝试目标的不同子集关键词。


---



[第4步]
[思考过程]
<think_summary>
- 基于历史搜索反馈显示依旧无结果，策略需要进一步简化。
- 当前策略将仅保留最核心的领域关键词，如“AI项目”，以测试更广的搜索效果。
- 移除“多模态”和具体架构词，确保不因细化要求限制结果。
- 工作年限和城市仍然保持不变，作为主要筛选条件。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：AI项目
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "AI项目", "location": ["杭州"], "degree": 2, "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 128，其中对第一页候选人进行合格检查，数量为: 10
        
        重复出现的人选数量: 0
        重复出现的人选占比: 0.0
        合格人选数量：0
        合格人选命中率（1即为100%）：0.0
        
对观察结果的分析摘要: ## 本轮检索整体评价
- 尽管搜索到128个候选人，但第一页的10个候选人均未合格，说明目前的关键词设置可能不足以有效筛选出目标候选人。关键词可能过于宽泛或缺乏针对性，未匹配到具体要求。

## 新线索发现（基于反馈信息）
- **高频出现的目标公司：** 没有具体信息
- **高频出现的职位头衔：** 没有具体信息
- **高频出现的技能关键词：** Transformer、CNN、LVM多模态、Python、C++
- **可以作为下一轮定向搜索的新方向：** 将关键词调整为包括更多具体的项目和技术经验关键词，如完整AI项目、Transformer、CNN架构、LVM多模态大模型等。

## 检索策略反馈
- **关键词是否过宽或过窄：** 关键词设置略显宽泛未能针对性体现目标能力要求。
- **哪些条件起到有效筛选作用：** 城市要求和AI项目经验虽然作为过滤器，但未实现有效筛选。如杭州的城市限定尽管是硬性约束，但没有选择出满足其他技能要求的候选人。
- **哪些条件可能需要调整或放宽：** 技术关键词处在较高要求的情况中，需提高项目和架构技能的权重，以保证能找到符合经验要求的合格候选人。

## 下一步建议
- **建议保留的条件：** 保持城市要求（如杭州）以确保地域匹配，同时保持硬性项目经验要求以保证项目经验。
- **建议放宽的条件：** 增加技术关键词，包括Python、C++、Transformer、CNN、LVM大模型等，以提高技术筛选的精准度。
- **建议新增的线索：** 针对项目主导经验和技术架构的具体关键词加入，如具体AI项目实例、PyTorch/TensorFlow框架、分布式训练经验等。


---



[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
4. 目标公司：[填写]
3. 目标岗位：[填写]
4. 能力关键词：[填写]
7. 目前城市：[填写]
8. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Task Instruction]

1. 计算机相关专业本科及以上学历
2. 五年以上相关工作经验
3. 主导过至少2个完整AI项目落地
4. 熟练掌握Python、C++、Java等至少一种编程语言
5. 精通Transformer、CNN等架构
6. 有LVM多模态大模型实战经验
7. 熟悉PyTorch/TensorFlow框架及分布式训练
8. 具备B端AI产品项目经验
9. 人选要求在杭州


---

[Conversation History]


[第0步]

---

[思考过程]
<think_summary>
- 暂无历史搜索反馈，并基于岗位要求给出初始策略。
- 选择了最重要的技能关键词，例如“多模态”“Transformer/CNN”以捕捉对基础架构有深入理解的候选人。
- 避免使用过多相互重叠的技术关键词，以确保搜索结果的相关性与有效性。
- 由于硬和软约束结合，先用技术能力进行收敛搜索，再结合项目和领域要求微调。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN; B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>

---

[执行操作]
# 关键词
page.fill("#rc_select_1", "多模态; Transformer; CNN; B端AI产品")
page.wait_for_timeout(300)

# 岗位名称
page.fill("#rc_select_2", "AI研发总监")
page.wait_for_timeout(300)

# 工作年限（先触发面板）
page.click(".sfilter-work-year .tag-label-group label:nth-child(7)")
page.wait_for_timeout(500)
page.fill("#workYearsLow", "5")
page.wait_for_timeout(300)

# 目前城市：杭州
page.click('.search-item.sfilter-city:has(.search-item-title:has-text("目前城市：")) label.tag-item:has-text("杭州")')
page.wait_for_timeout(300)

# 期望城市：杭州
page.click('.search-item.sfilter-city:has(.search-item-title:has-text("期望城市：")) label.tag-item:has-text("杭州")')
page.wait_for_timeout(300)

---

[操作结果]
搜索到的人选数量：共100位人选

---



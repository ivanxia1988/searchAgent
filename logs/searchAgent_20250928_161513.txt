[System Prompt]

角色设定
你是一名资深招聘搜索策略专家，精通用最少关键词实现最大筛选力，并能基于检索反馈快速迭代。

格式要求（严格遵守）
1. 先输出 <think_summary>（可公开的策略摘要，非逐步推理），再输出 <keywords>。
2. 两者缺一不可；顺序不可更改；必须使用以下固定模板。
3. 如无历史反馈，也必须在 <think_summary> 写明“暂无历史搜索反馈，并基于岗位要求给出初始策略”。

固定模板（严格照填）
-----------------
<think_summary>
[用1-5条要点，说明关键词取舍的高层理由；不包含逐步推演。]
</think_summary>
<keywords>
1. 学历下限：[填写]
2. 年龄要求：[填写]
3. 工作年限：[填写]
4. 性别要求：[填写]
5. 目标公司：[填写]
6. 目标岗位：[填写]
7. 能力关键词：[填写]
8. 目前城市：[填写]
9. 期望城市：[填写]
</keywords>
----------------

生成规范：
1. think_summary生成需要注意：
    -如果是首轮搜索，请明确阐述你的计划，包括关键词的选择和筛选策略，建议先从少量关键词去尝试
    -如果有历史反馈，请明确关键词的调整逻辑
    -学历、年龄、城市是硬约束、技能是软约束，可以固定“硬约束”，轮换“软约束” 
    -目标岗位关键词很容易造成无结果，需要谨慎考虑使用
    -关键词越长、越多都会导致无结果

2. keywords生成需要注意：
    -目标公司和目标岗位只在岗位要求中有明确提出时才生成
    -能力关键词不建议过多，以防止没有那么多匹配项，而且关键词是AND方式，扩展更多关键词反而会让搜索结果更小
    -不要将非能力关键词的技能词加入能力关键词中，例如将城市加入能力关键词
    -大部分情况下，每一轮调整都是对能力关键词的调整
    -能力关键词不要出现有覆盖性的能力，例如tensorflow是包含python能力的


稳健性要求
- 若因任何原因无法输出 <think_summary>，则改用 <strategy>，内容同上。
- 生成前自检：是否包含且仅包含 <think_summary> 或 <strategy> 之一，以及 <keywords>；顺序正确；无其他多余标签。
- 如检测失败，立刻重新生成。

示例输入（无历史反馈）：
【岗位要点】本科及以上；5年以上；主导≥2个AI项目；Python/C++/Java（至少其一）；
Transformer/CNN；多模态大模型经验；PyTorch/TensorFlow+分布式；B端AI产品；杭州

示例输出：
<think_summary>
- 初始检索以“岗位+核心技能+城市”组合起步，控制结果规模。
- 将“多模态”“Transformer/CNN”放入技能段，避免抽象词。
- 先用框架关键词单测，再与岗位/城市进行 AND 组合。
- 无历史反馈，先走收敛策略：从技能→框架→行业，逐步加严。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
4. 目标公司：无
3. 目标岗位：AI研发总监
4. 能力关键词：多模态; Transformer; CNN；B端AI产品
7. 目前城市：杭州
8. 期望城市：杭州
</keywords>


---

[Reference]
曾经有效的策略可供参考：None

---

[Task Instruction]

我要找到20个符合条件的人选，岗位要求如下：

AI方向技术负责人
1. 本科以上学历
2. 五年以上相关工作经验
3. 主导过至少2个AI项目
5. 精通Transformer、CNN等架构
7. 熟悉PyTorch/TensorFlow框架及分布式训练
9. 人选现在在杭州，或者希望来杭州工作，满足任意一项即可


当前任务完成进度为（1即100%）：0.0

---

[Conversation History]


[第1步]
[思考过程]
<think_summary>
- 首轮搜索，从“学历+工作年限+核心技能+城市”进行组合，减小范围。
- 包含具体框架技能（PyTorch/TensorFlow）来确认深度技术能力。
- 城市作为硬约束，这次提供选择以尝试扩大符合条件的人选。
- 目标岗位不使用具体名称，防止搜索过于精准导致无结果。
- 初步方案集中于抽象技术和实用框架，调整与转化潜力结合。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch; 分布式训练
8. 目前城市：杭州
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "workExperienceRange": 5, "keyword": "Transformer; CNN; PyTorch; 分布式训练", "location": ["杭州"], "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 3，其中对第一页候选人进行合格检查，数量为: 3
        
                重复出现的人选数量: 0
                重复出现的人选占比: 0.0
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本次检索总共找到3名候选人，但没有符合岗位要求的合格人选。主要问题在于城市要求的限制，所有候选人当前所在地或期望城市都未满足杭州的要求。

## 新线索发现（仅针对合格人选）
- 本次检索没有找到合格人选，因此没有新线索发现。

## 检索策略反馈
- 关键词是否过宽或过窄：城市限制条件过窄。
- 哪些条件起到有效筛选作用：城市要求是主要的筛选条件，但也限制了更多可能的合格人选。
- 哪些条件可能需要调整或放宽：考虑调整城市相关的限制条件，增加对期望城市的影响力。

## 下一步建议
- 建议保留的条件：继续保留当前岗位相关的专业技能关键词。
- 建议放宽的条件：对于城市的限制，可以考虑原籍或期望工作城市为杭州的候选人。
- 建议新增的线索：尝试找到期望城市为杭州或更灵活地结合期望与实际工作地点的候选人，以增加合格人选的可能性。


---



[第2步]
[思考过程]
<think_summary>
- 根据历史反馈，城市要求过于特定，限制了合格人选的数量，因此需放宽此限制。
- 初步策略调整为结合期望城市，从目前所在城市和期望迁移城市两个角度进行搜索。
- 技能关键词保持专业性，以确保搜索领域的精准，探索分布式训练和框架技术的实际应用经验。
- 继续保持学历和工作年限的硬性约束，确保候选人的基本素质。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch; 分布式训练
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"keyword": "Transformer; CNN; PyTorch; 分布式训练", "location": ["杭州"], "degree": 2, "workExperienceRange": 5, "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 3，其中对第一页候选人进行合格检查，数量为: 3
        
                重复出现的人选数量: 3
                重复出现的人选占比: 1.0
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索结果显示共找到3个候选人，但所有人选均为重复出现，合格人选数量为0，命中率为0%。

## 新线索发现（仅针对合格人选）
由于本轮无合格人选，因此无新线索可用于下一轮搜索。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词设置可能过于窄或不够准确，导致未能搜索到合适的候选人。
- 哪些条件起到有效筛选作用：由于没有合格人选，因此无法评估哪部分条件有效。
- 哪些条件可能需要调整或放宽：关键词可能需要重新评估和调整，以确保能够覆盖更广泛的潜在合格人选。

## 下一步建议
- 建议保留的条件：无有效信息显示需要保留哪一部分条件。
- 建议放宽的条件：关键词数量应减少，聚焦于职位核心要求或技能。
- 建议新增的线索：考虑减少关键词复杂度或尝试使用相关职位或技能更为核心的关键词进行新一轮搜索。


---



[第3步]
[思考过程]
<think_summary>
- 历史反馈表明，关键词设置可能过于复杂或不够准确，需要更精简。
- 下一步尝试减少关键词数量，重点突出职位的核心技能，确保精准度。
- 结合目前城市不限的情况，继续探索期望城市为杭州的潜在候选人。
- 保持学历与工作年限的硬性约束，确保基础素质。
</think_summary>
<keywords>
1. 学历下限：本科
2. 年龄要求：不限
3. 工作年限：5年以上
4. 性别要求：不限
5. 目标公司：无
6. 目标岗位：无
7. 能力关键词：Transformer; CNN; PyTorch
8. 目前城市：不限
9. 期望城市：杭州
</keywords>
[执行操作]
通过API完成检索，payload如下：{"degree": 2, "workExperienceRange": 5, "keyword": "Transformer; CNN; PyTorch", "location": ["杭州"], "page": 1, "pageSize": 10}
[操作结果]

        搜索到的人选总数: 13，其中对第一页候选人进行合格检查，数量为: 10
        
                重复出现的人选数量: 3
                重复出现的人选占比: 0.3
                合格人选数量：0
                合格人选命中率（1即为100%）：0.0
                
对观察结果的分析摘要: ## 本轮检索整体评价
- 本轮检索未找到合格人选，所有候选人均不符合要求。主要原因在于未有效筛选出具备明确项目主导经验及特定技术架构熟悉度的候选人。

## 新线索发现（仅针对合格人选）
- 本轮未发现合格人选，因此没有适用于合格人选的新线索。

## 检索策略反馈
- 关键词是否过宽或过窄：关键词过窄，未能有效捕捉项目主导经验和技术架构的熟悉度。
- 哪些条件起到有效筛选作用：目前检索策略未能有效筛选出合格候选人。
- 哪些条件可能需要调整或放宽：需要增加项目主导经验的关键词，及明确的技术架构和求职状态关键词。

## 下一步建议
- 建议保留的条件：
  - AI相关技术技能如Transformer、CNN、PyTorch等关键词保留，以锁定AI方向候选人。
  
- 建议放宽的条件：
  - 当前过多聚焦特定工作状态（在职/离职）的条件可以略作放宽，以接触更多潜在候选人。
  
- 建议新增的线索：
  - 增加对项目主导经验的关键词过滤，例如“项目负责人”、“项目管理”。
  - 引入AI项目技术架构的更明确关键词，如“TensorFlow项目主导”、“分布式训练经验”。
  - 融入求职状态检查，更好地筛选出求职开放的候选人。


---


